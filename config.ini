# Travel Destination Recommendation System
# Configuration File

# ============================================
# NLP CONFIGURATION
# ============================================

[nlp]
# Sentence transformer model
model_name = all-MiniLM-L6-v2
# Alternative models (uncomment to use):
# model_name = paraphrase-MiniLM-L3-v2  # Smaller, faster
# model_name = all-mpnet-base-v2         # More accurate, slower
# model_name = multi-qa-MiniLM-L6-cos-v1 # Optimized for questions

# Embedding dimension (auto-detected from model)
embedding_dim = 384

# Text preprocessing options
remove_stopwords = true
expand_synonyms = true
lowercase = true


# ============================================
# RECOMMENDATION SYSTEM CONFIGURATION
# ============================================

[recommendation]
# Default hybrid weights (must sum to 1.0)
alpha_nlp = 0.5          # Weight for NLP semantic similarity
beta_content = 0.3       # Weight for content-based matching
gamma_popularity = 0.2   # Weight for overall popularity

# Number of recommendations
default_top_n = 5
max_top_n = 20

# Minimum rating threshold
min_rating_default = 0.0
max_rating = 5.0

# Activity columns to consider
activities = [
    "culture",
    "adventure", 
    "nature",
    "beaches",
    "nightlife",
    "cuisine",
    "wellness",
    "urban",
    "seclusion"
]


# ============================================
# DATA CONFIGURATION
# ============================================

[data]
# Dataset path
csv_path = data/Worldwide-Travel-Cities-Dataset-Ratings-and-Climate.csv

# Required columns
required_columns = [
    "city",
    "country",
    "region"
]

# Optional columns
optional_columns = [
    "latitude",
    "longitude",
    "short_description",
    "budget_level",
    "overall_rating"
]


# ============================================
# VISUALIZATION CONFIGURATION
# ============================================

[visualization]
# Chart colors (Plotly color scales)
bar_chart_colorscale = Viridis
pie_chart_colors = ["#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"]
heatmap_colorscale = YlOrRd

# Map settings
map_zoom_start = 2
map_center_lat = 20.0
map_center_lon = 0.0

# Marker colors by rating
marker_color_excellent = green    # >= 4.5
marker_color_great = blue         # >= 4.0
marker_color_good = orange        # >= 3.5
marker_color_average = red        # < 3.5


# ============================================
# UI CONFIGURATION
# ============================================

[ui]
# Page settings
page_title = Travel Destination Recommender
page_icon = ✈️
layout = wide

# Sidebar defaults
default_region = All
default_budget = All
default_min_rating = 0.0

# Text input
query_placeholder = "E.g., I want to relax on beautiful beaches in Asia with great food and affordable prices"
query_max_length = 500

# Display settings
show_score_breakdown = true
show_similar_destinations = true
enable_export = true


# ============================================
# PERFORMANCE CONFIGURATION
# ============================================

[performance]
# Caching
enable_data_cache = true
enable_model_cache = true
enable_embedding_cache = true

# Batch processing
embedding_batch_size = 32

# Map optimization
max_map_markers = 100


# ============================================
# ADVANCED CONFIGURATION
# ============================================

[advanced]
# Similarity threshold (0-1)
min_similarity_threshold = 0.0

# Fallback to popular if no query
enable_popular_fallback = true

# Debug mode
debug = false
verbose_logging = false

# Future features (not yet implemented)
enable_collaborative_filtering = false
enable_user_accounts = false
enable_multilingual = false
enable_real_time_data = false


# ============================================
# API CONFIGURATION
# ============================================

[api]
# Weather API (optional integration)
weather_api_key = YOUR_API_KEY_HERE
weather_api_url = https://api.openweathermap.org/data/2.5/weather

# Translation API (optional integration)
translation_api_key = YOUR_API_KEY_HERE
translation_api_url = https://translation.googleapis.com/language/translate/v2


# ============================================
# GEMINI AI CONFIGURATION
# ============================================

# ============================================================================
# 🔑 GEMINI API KEY - CHANGE YOUR API KEY HERE!
# ============================================================================
# To get a new API key: https://aistudio.google.com/apikey
# Free tier: 50 requests/day
# If you hit quota, wait 24 hours or upgrade to paid plan
# ============================================================================
[GEMINI]
api_key = AIzaSyCD-0mUqPfWw_2fjzM3Ad_fJsFFrjfdy2U

# Gemini model settings (don't change these unless you know what you're doing)
model = gemini-2.0-flash-exp
enable_description_enhancement = true
enable_recommendation_refinement = true
enable_travel_insights = true
max_batch_enhance = 5
rate_limit_delay = 1.0


# ============================================
# NOTES
# ============================================

# This configuration file uses TOML-like syntax
# Values can be modified to customize system behavior
# For production use, migrate to actual config management (e.g., python-decouple, pydantic)
# Environment variables should override these defaults for sensitive data
